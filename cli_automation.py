#!/bin/bash
import time
import subprocess
from Temp_sensor_with_time_U6_t import temp_sensor
#import PX14400
import shutil
import sys
#from S11_VNA import S11
#from S11_ReceiverReading import RS11
from Tkinter import *
import u3 , os ,time
from signal import signal, SIGINT
from sys import exit
import signal
import Global_var
import u3 , os ,time
import array as arr
from codecs import decode
import struct
import csv
import numpy as np
import re
import socket


def ambient_load(temp,time_1):

    Global_var.d.getFeedback(u3.BitDirWrite(4, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(5, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(6, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(7, 1))


    print("***************************************************************************")
    print("***************************************************************************")
    print("                   Starting Ambient load calibration")
    print("***************************************************************************")
    print("***************************************************************************")

    #print('temp=',temp)
    raw_input ('Press Enter to continue...')
    print("\n")
    print("Step1: connect ambient load to receiver input \n")
    print("\n")
    #raw_input("Press Enter to continue...")
    #print("\n")
    print("Step2: make sure that high pass filter connected to the ports of ambient load \n")
    print("\n")
    #raw_input("Press Enter to continue...")
    #print("\n")
    print("Step3: make sure that voltage supply connected to the ambient load is set to zero \n")
    print("\n")
    #raw_input("Press Enter to continue...")
    #print("\n")
    print("Step4: make sure that thermistor port is connected to labjack \n")
    #print("\n")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("Starting the spectrum observing program and temperature monitoring program \n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    #print("Wait for 24 hr while taking spectrum and temerature \n")
    
    
    #Global_var.p=subprocess.Popen(["/home/edges-0/Desktop/code/Edges2/fastspec-1.1.0/fastspec_single", "-i", "/home/edges-0/Desktop/code/Edges2/fastspec-1.1.0/edges.ini", "-s",str(time_1),"-p"])
    Global_var.p=subprocess.Popen([Global_var.PXspec, "-i", Global_var.PXspec_ini, "-s",str(time_1),"-p"])
    temp=str(temp)
    #Global_var.e=subprocess.Popen(['python','/home/edges-0/Desktop/Titu/Automation/Temp_sensor_with_time_U6_t.py'])
    Global_var.e=subprocess.Popen(['python',Global_var.Temp_res])
    time.sleep(time_1+60)
   # temp_process.terminate()
    #print("Completed the ambient spetrum measurment \n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                      finished the spectrum measurement \n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    #raw_input("Press Enter to continue...")
    print("\n")
    print("Take S11 measurements \n")
    print("\n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 37 V and measure S11, save as External01 \n")
    
    print("\n")
    #raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 External01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','External01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 External01 measurment\n")
    print("--------------------------------------------------------------------------")
    
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 0))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    

    print("voltage set to 34 V and measure S11, save as Match01 \n")
    print("\n")
    #raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                 Starting S11 Match01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    
    S11()
    shutil.move('S11.csv','Match01.s1p')
    
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))

    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Match01 measurment\n")
    print("--------------------------------------------------------------------------")
    
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
   
    print("voltage set to 31.3 V and measure S11, save as Short01 \n")
    print("\n")
    #raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    #print("Taking S11 Short01 measurment\n")
    S11()
    shutil.move('S11.csv','Short01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))

    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    
    Global_var.d.getFeedback(u3.BitStateWrite(4, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 28 V and measure S11 and save as Open01 \n")
    print("\n")
    #raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    #print("Taking S11 Open01 measurment\n")
    S11()
    shutil.move('S11.csv','Open01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    
    print("--------------------------------------------------------------------------")
    print("            Taking the second set of  S11 measurment\n")
    print("--------------------------------------------------------------------------")
    #raw_input("Press Enter to continue...")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))

    print("voltage set to 37 V and measure S11,save as External02 \n")
    print("\n")
    #raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 External02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','External02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 External02 measurment\n")
    print("--------------------------------------------------------------------------")

    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 0))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))

    
    print("voltage set to 34 V and measure S11, save as Match02 \n")
    print("\n")
    #raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Match02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    #print("Taking S11 Match02 measurment\n")
    S11()
    shutil.move('S11.csv','Match02.s1p')
    
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))    

    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Match02 measurment\n")
    print("--------------------------------------------------------------------------")

    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
     

    print("voltage set to 31.3 V and measure S11, save as Short02 \n")
    print("\n")
    #raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Short02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    #print("Taking S11 Short02 measurment\n")
    S11()
    shutil.move('S11.csv','Short02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Short02 measurment\n")
    print("--------------------------------------------------------------------------")

    Global_var.d.getFeedback(u3.BitStateWrite(4, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 28 V and measure S11, save as Open02 \n")
    print("\n")
    #raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Open02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    #print("Taking S11 Open02 measurment\n")
    S11()
    shutil.move('S11.csv','Open02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Open02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.e.terminate()


def Antsim1_load(temp,time_1):
    Global_var.d.configIO(FIOAnalog = 15)
    Global_var.d.getFeedback(u3.BitDirWrite(4, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(5, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(6, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(7, 1))
    print("***************************************************************************")
    print("***************************************************************************")
    print("                   Starting Antsim1 load calibration")
    print("***************************************************************************")
    print("***************************************************************************")
    raw_input ('Press Enter to continue...')
    print("\n")
    print("Step1: connect Antsim1 to receiver input \n")
    print("\n")
    print("step2: make sure that thermistor port is connected to labjack \n")
    print("\n")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("Starting the spectrum observing program and temperature monitoring program \n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    Global_var.p=subprocess.Popen([Global_var.PXspec, "-i", Global_var.PXspec_ini, "-s",str(time_1),"-p"])
    Global_var.e=subprocess.Popen(['python', Global_var.Temp_res])
    time.sleep(time_1+60)
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                      finished the spectrum measurement \n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("\n")
    print("Take S11 measurements \n")
    print("\n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 37 V and measure S11, save as External01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 External01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','External01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 External01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 0))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 34 V and measure S11, save as Match01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                 Starting S11 Match01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Match01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Match01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 31.3 V and measure S11, save as Short01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Short01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 28 V and measure S11 and save as Open01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Open01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("            Taking the second set of  S11 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 37 V and measure S11,save as External02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 External02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','External02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 External02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 0))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 34 V and measure S11, save as Match02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Match02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Match02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))    
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Match02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 31.3 V and measure S11, save as Short02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Short02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Short02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Short02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 28 V and measure S11, save as Open02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Open02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Open02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Open02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.e.terminate()




def Antsim2_load(temp,time_1):
    Global_var.d.configIO(FIOAnalog = 15)
    Global_var.d.getFeedback(u3.BitDirWrite(4, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(5, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(6, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(7, 1))
    print("***************************************************************************")
    print("***************************************************************************")
    print("                   Starting Antsim2 load calibration")
    print("***************************************************************************")
    print("***************************************************************************")
    raw_input ('Press Enter to continue...')
    print("\n")
    print("Step1: connect Antsim2 load to receiver input \n")
    print("\n")
    print("\n")
    print("Step3: make sure that thermistor port is connected to labjack \n")
    print("\n")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("Starting the spectrum observing program and temperature monitoring program \n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    Global_var.p=subprocess.Popen([Global_var.PXspec, "-i", Global_var.PXspec_ini, "-s",str(time_1),"-p"])
    Global_var.e=subprocess.Popen(['python', Global_var.Temp_res])
    time.sleep(time_1+60)
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                      finished the spectrum measurement \n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("\n")
    print("Take S11 measurements \n")
    print("\n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 37 V and measure S11, save as External01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 External01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','External01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 External01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 0))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 34 V and measure S11, save as Match01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                 Starting S11 Match01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Match01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Match01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 31.3 V and measure S11, save as Short01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Short01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 28 V and measure S11 and save as Open01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Open01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("            Taking the second set of  S11 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 37 V and measure S11,save as External02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 External02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','External02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 External02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 0))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 34 V and measure S11, save as Match02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Match02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Match02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))    
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Match02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 31.3 V and measure S11, save as Short02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Short02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Short02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Short02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 28 V and measure S11, save as Open02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Open02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Open02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Open02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.e.terminate()

def Antsim3_load(temp,time_1):

    Global_var.d.configIO(FIOAnalog = 15)
    Global_var.d.getFeedback(u3.BitDirWrite(4, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(5, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(6, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(7, 1))
    print("***************************************************************************")
    print("***************************************************************************")
    print("                   Starting Antsim3 load calibration")
    print("***************************************************************************")
    print("***************************************************************************")
    raw_input ('Press Enter to continue...')
    print("\n")
    print("Step1: connect Antsim3 load to receiver input \n")
    print("\n")
    print("\n")
    print("Step2: make sure that thermistor port is connected to labjack \n")
    print("\n")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("Starting the spectrum observing program and temperature monitoring program \n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    Global_var.p=subprocess.Popen([Global_var.PXspec, "-i", Global_var.PXspec_ini, "-s",str(time_1),"-p"])
    Global_var.e=subprocess.Popen(['python', Global_var.Temp_res])
    time.sleep(time_1+60)
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                      finished the spectrum measurement \n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("\n")
    print("Take S11 measurements \n")
    print("\n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 37 V and measure S11, save as External01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 External01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','External01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 External01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 0))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 34 V and measure S11, save as Match01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                 Starting S11 Match01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Match01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Match01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 31.3 V and measure S11, save as Short01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Short01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 28 V and measure S11 and save as Open01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Open01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("            Taking the second set of  S11 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 37 V and measure S11,save as External02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 External02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','External02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 External02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 0))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 34 V and measure S11, save as Match02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Match02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Match02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))    
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Match02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 31.3 V and measure S11, save as Short02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Short02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Short02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Short02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 28 V and measure S11, save as Open02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Open02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Open02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Open02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.e.terminate()


def hot_load(temp,time_1):
    Global_var.d.configIO(FIOAnalog = 15)
    Global_var.d.getFeedback(u3.BitDirWrite(4, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(5, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(6, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(7, 1))
    print("***************************************************************************")
    print("***************************************************************************")
    print("                   Starting hot load calibration")
    print("***************************************************************************")
    print("***************************************************************************")
    raw_input ('Press Enter to continue...')
    print("\n")
    print("Step1: connect hot load to receiver input \n")
    print("\n")
    print("Step2: make sure that high pass filter connected to the ports of Hot load \n")
    print("\n")
    print("Step3: make sure that voltage supply connected to the hot load is set to 12V \n")
    print("\n")
    print("Step4: make sure that thermistor port is connected to labjack \n")
    print("\n")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("Starting the spectrum observing program and temperature monitoring program \n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    Global_var.p=subprocess.Popen([Global_var.PXspec, "-i", Global_var.PXspec_ini, "-s",str(time_1),"-p"])
    Global_var.e=subprocess.Popen(['python', Global_var.Temp_res])
    time.sleep(time_1+60)
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                      finished the spectrum measurement \n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("\n")
    print("Take S11 measurements \n")
    print("\n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 37 V and measure S11, save as External01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 External01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','External01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 External01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 0))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 34 V and measure S11, save as Match01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                 Starting S11 Match01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Match01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Match01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 31.3 V and measure S11, save as Short01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Short01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 28 V and measure S11 and save as Open01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Open01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("            Taking the second set of  S11 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 37 V and measure S11,save as External02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 External02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','External02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 External02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 0))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 34 V and measure S11, save as Match02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Match02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Match02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))    
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Match02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 31.3 V and measure S11, save as Short02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Short02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Short02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Short02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 28 V and measure S11, save as Open02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Open02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Open02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Open02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.e.terminate()

def LongCableOpen_load(temp,time_1):
    Global_var.d.configIO(FIOAnalog = 15)
    Global_var.d.getFeedback(u3.BitDirWrite(4, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(5, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(6, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(7, 1))
    print("***************************************************************************")
    print("***************************************************************************")
    print("                   Starting LongCableOpen calibration")
    print("***************************************************************************")
    print("***************************************************************************")
    raw_input ('Press Enter to continue...')
    print("\n")
    print("Step1: connect LongCableOpen to receiver input \n")
    print("\n")
    print("Step2: make sure that thermistor port is connected to labjack \n")
    print("\n")
    print("Step3: make sure that open is connected to longcable \n")
    print("\n")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("Starting the spectrum observing program and temperature monitoring program \n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    Global_var.p=subprocess.Popen([Global_var.PXspec, "-i", Global_var.PXspec_ini, "-s",str(time_1),"-p"])
    Global_var.e=subprocess.Popen(['python', Global_var.Temp_res])
    time.sleep(time_1+60)
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                      finished the spectrum measurement \n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("\n")
    print("Take S11 measurements \n")
    print("\n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 37 V and measure S11, save as External01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 External01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','External01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 External01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 0))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 34 V and measure S11, save as Match01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                 Starting S11 Match01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Match01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Match01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 31.3 V and measure S11, save as Short01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Short01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 28 V and measure S11 and save as Open01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Open01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("            Taking the second set of  S11 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 37 V and measure S11,save as External02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 External02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','External02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 External02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 0))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 34 V and measure S11, save as Match02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Match02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Match02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))    
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Match02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 31.3 V and measure S11, save as Short02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Short02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Short02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Short02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 28 V and measure S11, save as Open02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Open02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Open02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Open02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.e.terminate()

def LongCableShort_load(temp,time_1):
    Global_var.d.configIO(FIOAnalog = 15)
    Global_var.d.getFeedback(u3.BitDirWrite(4, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(5, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(6, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(7, 1))
    print("***************************************************************************")
    print("***************************************************************************")
    print("                   Starting LongCableShort load calibration")
    print("***************************************************************************")
    print("***************************************************************************")
    raw_input ('Press Enter to continue...')
    print("\n")
    print("Step1: connect LongCableShort load to receiver input \n")
    print("\n")
    print("Step2: make sure that thermistor port is connected to labjack \n")
    print("\n")
    print("Step2: make sure that short is connected to longcable \n")
    print("\n")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("Starting the spectrum observing program and temperature monitoring program \n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    Global_var.p=subprocess.Popen([Global_var.PXspec, "-i", Global_var.PXspec_ini, "-s",str(time_1),"-p"])
    Global_var.e=subprocess.Popen(['python', Global_var.Temp_res])
    time.sleep(time_1+60)
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                      finished the spectrum measurement \n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("\n")
    print("Take S11 measurements \n")
    print("\n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 37 V and measure S11, save as External01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 External01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','External01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 External01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 0))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 34 V and measure S11, save as Match01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                 Starting S11 Match01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Match01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Match01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 31.3 V and measure S11, save as Short01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Short01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 28 V and measure S11 and save as Open01 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Open01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("            Taking the second set of  S11 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 37 V and measure S11,save as External02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 External02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','External02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 External02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 0))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 34 V and measure S11, save as Match02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Match02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Match02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))    
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Match02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 31.3 V and measure S11, save as Short02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Short02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Short02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Short02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("voltage set to 28 V and measure S11, save as Open02 \n")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Open02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Open02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Open02 measurment\n")
    print("--------------------------------------------------------------------------")
    Global_var.e.terminate()

def ReceiverReading01():
    print("***************************************************************************")
    print("***************************************************************************")
    print("                   Starting Receiver reading  measurments")
    raw_input("Press Enter to continue...")
    print("Make sure that the fastspec is running in a different ternimal for a minimum of 4 hours to stabilize the receiver")
    raw_input("Press Enter to continue...")
    print("Make sure the network analyser is connected with M-M SMA and calibrate with  ReceiverReading_VNA_calib.py")
    raw_input("Press Enter to continue...")
    print("")
    print("***************************************************************************")
    print("***************************************************************************")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("           Connect  Matched load to VNA Matched01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    print("\n")
    RS11()
    shutil.move('S11.csv', 'Match01.s1p')
    print("--------------------------------------------------------------------------")
    print("                  Fnished  Matched01 measurment\n")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("           Connect  Open load to VNA open01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    print("\n")
    RS11()
    shutil.move('S11.csv', 'Open01.s1p')
    print("--------------------------------------------------------------------------")
    print("                  Fnished  Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("           Connect  Short load to VNA Matched01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    print("\n")
    RS11()
    shutil.move('S11.csv', 'Short01.s1p')
    print("--------------------------------------------------------------------------")
    print("                  Fnished  Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("           Connect  VNA to Receiver input for ReceiverReading01  measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    print("\n")
    print("--------------------------------------------------------------------------")
    print(" Stop fastspec running in the other terminal \n")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    RS11()
    shutil.move('S11.csv', 'ReceiverReading01.s1p')
    print("--------------------------------------------------------------------------")
    print("                  Fnished  ReceiverReading01 measurment\n")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print(" Start fastspec running in the other terminal \n")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("           Connect  Matched load to VNA Matched02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    print("\n")
    RS11()
    shutil.move('S11.csv', 'Match02.s1p')
    print("--------------------------------------------------------------------------")
    print("                  Fnished  Matched02 measurment\n")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("           Connect  Open load to VNA open02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    print("\n")
    RS11()
    shutil.move('S11.csv', 'Open02.s1p')
    print("--------------------------------------------------------------------------")
    print("                  Fnished  Open02 measurment\n")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("           Connect  Short load to VNA Matched02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    print("\n")
    RS11()
    shutil.move('S11.csv', 'Short02.s1p')
    print("--------------------------------------------------------------------------")
    print("                  Fnished  Short02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("           Connect  VNA to Receiver input for ReceiverReading02  measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    print("\n")
    print("--------------------------------------------------------------------------")
    print(" Stop fastspec running in the other terminal \n")
    print("--------------------------------------------------------------------------")
    raw_input("Press Enter to continue...")
    RS11()
    shutil.move('S11.csv', 'ReceiverReading02.s1p')
    print("--------------------------------------------------------------------------")
    print("                  Fnished  ReceiverReading02 measurment\n")
    print("--------------------------------------------------------------------------")


def SwitchingState01():
    Global_var.d.configIO(FIOAnalog = 15)
    Global_var.d.getFeedback(u3.BitDirWrite(4, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(5, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(6, 1))
    Global_var.d.getFeedback(u3.BitDirWrite(7, 1))
    print("***************************************************************************")
    print("***************************************************************************")
    print("                   Starting switching state measurments")
    print("***************************************************************************")
    print("***************************************************************************")
    print("\n")
    print("voltage set to 37 V and measure S11 \n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("\n")
    print("Connect Macth to receiver input")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 ExternalMatched01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','ExternalMatch01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 ExternalMatched01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("voltage set to 37 V  \n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("\n")
    print("Connect Open to receiver input")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Externalopen01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','ExternalOpen01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 ExternalOpen01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("voltage set to 37 V  \n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("\n")
    print("Connect Short to receiver input")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 ExternalShort01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','ExternalShort01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 ExternalShort01 measurment\n")
    print("--------------------------------------------------------------------------")





    print("voltage set to 34 V  \n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 0))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                 Starting S11 Match01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Match01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Match01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("voltage set to 31.3 V  \n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Short01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Short01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("voltage set to 28 V and measure S11 and save as Open01\n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Open01.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Open01 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("            Taking the second set of  S11 measurment\n")
    print("--------------------------------------------------------------------------")
    print("voltage set to 37V\n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("\n")
    print("Connect Macthed load to receiver input")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 ExternalMatched02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','ExternalMatch02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 ExternalMatched02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("voltage set to 37V\n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("\n")
    print("Connect Open load to receiver input")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Externalopen02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','ExternalOpen02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 ExternalOpen02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("voltage set to 37V\n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("\n")
    print("Connect Short load to receiver input")
    raw_input("Press Enter to continue...")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Externalshort02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','ExternalShort02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 ExternalOpen02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("voltage set to 34 V\n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 0))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Match02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Match02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))    
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Match02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("voltage set to 31.3 V\n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Short02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Short02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Short02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("voltage set to 28V\n")
    Global_var.d.getFeedback(u3.BitStateWrite(4, 0))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    time.sleep(0.1)
    Global_var.d.getFeedback(u3.BitStateWrite(7, 0))
    print("\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    print("                  Starting S11 Open02 measurment\n")
    print("--------------------------------------------------------------------------")
    print("--------------------------------------------------------------------------")
    S11()
    shutil.move('S11.csv','Open02.s1p')
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    print("--------------------------------------------------------------------------")
    print("                  Fnished S11 Open02 measurment\n")
    print("--------------------------------------------------------------------------")



def S11():
	#-----------------------------------------------------------------------
	#             Function to read the data transfered from VNA
	#-----------------------------------------------------------------------
	def binblock_raw(data_in):

	    #Find the start position of the IEEE header, which starts with a '#'.
	    startpos = data_in.find("#")
    	    #print("Start Position reported as " + str(startpos))

	    #Check for problem with start position.
	    if startpos < 0:
	        raise IOError("No start of block found")

	    #Find the number that follows '#' symbol.  This is the number of digits in the block length.
	    Size_of_Length = int(data_in[startpos+1])
	    #print("Size of Length reported as " + str(Size_of_Length))

	    ##Now that we know how many digits are in the size value, get the size of the data file.
	    Image_Size = int(data_in[startpos+2:startpos+2+Size_of_Length])
	    #print("Number of bytes in file are: " + str(Image_Size))

	    # Get the length from the header
	    offset = startpos+Size_of_Length

	    # Extract the data out into a list.
	    return data_in[offset:offset+Image_Size]
	#-----------------------------------------------------------------------
	#             Function to read the data transfered from VNA
	#-----------------------------------------------------------------------


        #signal.signal(signal.SIGINT, handler)
	# Create a TCP/IP socket
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	server_address = ('10.206.161.72', 5025)                         # ip address of NA
	print "--------------------------------------------------------------------------"
        print >>sys.stderr, 'connecting to network analyser  %s port %s' % server_address
        print "--------------------------------------------------------------------------"
	
        s.connect(server_address)
	MESSAGE = '*IDN?\n'
	s.send(MESSAGE)
	time.sleep(0.05)
	data = s.recv(200)
	print "--------------------------------------------------------------------------"
	print "   Connected to ENA: ", data
	print "--------------------------------------------------------------------------"

	MESSAGE = 'FORM:DATA ASCii;*OPC?\n'             #Define data format for Data transfer reference SCPI Programer guide E5061A 
	s.send(MESSAGE)
 
        #MESSAGE='SENS:FREQ:START '+Start_freq+'e6;**OPC?\n'
	MESSAGE = 'SENS:FREQ:START 40e6;*OPC?\n'
	s.send(MESSAGE)

        #MESSAGE='SENS:FREQ:START '+Stop_freq+'e6;**OPC?\n'
	MESSAGE = 'SENS:FREQ:STOP 200e6;*OPC?\n'
	s.send(MESSAGE)

#-----------------------------------------------------
#       set the output power level there are different level of attenuation
#       check document Agilent E5070B/E5071B ENA programmers guide page no 705
        MESSAGE = 'SOUR:POW:ATT 0;*OPC?\n'
        s.send(MESSAGE)

        MESSAGE = 'SOUR:POW 0;*OPC?\n'
        s.send(MESSAGE)

#        MESSAGE = 'SOUR:POW?;*OPC?\n'
#        s.send(MESSAGE)
        time.sleep(0.5)
#        power = s.recv(200)
#        print"power=",power
#-----------------------------------------------------
#-----------------------------------------------------



	MESSAGE = 'SENS:SWE:POIN 641;*OPC?\n'
	s.send(MESSAGE)
	MESSAGE = 'SENS:BWID 100;*OPC?\n'
	s.send(MESSAGE)
        MESSAGE = 'SENS:AVER:STAT 1;*OPC?\n'
        s.send(MESSAGE)
        MESSAGE = 'SENS:AVER:CLE;*OPC?\n'
        s.send(MESSAGE)

	MESSAGE = 'SENS:AVER:COUN 10;*OPC?\n'
	s.send(MESSAGE)
	MESSAGE = 'INIT:CONT ON;*OPC?\n'
	s.send(MESSAGE)
#        MESSAGE = 'TRIG:WAIT WAIT;*OPC?\n'
#        s.send(MESSAGE)
        time.sleep(10)
        MESSAGE= 'DISP:WIND1:TRAC1:Y:AUTO;*OPC?\n'
        s.send(MESSAGE)
        print "__________________________________________________________________________ "
        print "__________________________________________________________________________ "

        print("VNA settings for S11 measurments\n")
        print("IF                 =100Hz\n")
        print("Strat freq         =40MHz\n")
        print("Strop freq         =200MHz\n")
        print("No. of freq points =641\n")
        print("RF power output    =0dBm\n")
        print("No. of averaging   =10\n")
        print("Calibration kit    =85033E Agilent ")
        print "__________________________________________________________________________ "
        print "__________________________________________________________________________ "




	print "__________________________________________________________________________ "
	print '                        STARTING MEASUREMENTS'
	#MESSAGE = 'INIT:IMM;*OPC?\n'
	print '__________________________________________________________________________'
	s.send(MESSAGE)
	time.sleep(70)

        MESSAGE = 'INIT:CONT OFF;*OPC?\n'
        s.send(MESSAGE)
        time.sleep(5)
 	#___________________________________________________________

	# Read Phase value and transfer to host controller
	#-----------------------------------------------------------


	MESSAGE = 'CALC1:FORM IMAG;*OPC?\n' #Define data type and chanel for Data transfer reference SCPI Programer guide E5061A 
	s.send(MESSAGE)

	MESSAGE = 'MMEM:STOR:FDAT "D:\\Auto\\EDGES_p.csv";*OPC?\n'#save data internal memory reference SCPI Programer guide E5061A 
	s.send(MESSAGE)
	MESSAGE = 'MMEM:TRAN? "D:\\Auto\\EDGES_p.csv";*OPC?\n' #transfer data to host controller reference SCPI Programer guide E5061A 
	s.send(MESSAGE)
	time.sleep(1)
	data_phase = s.recv(180000) #buffer size for receiving data currently set as 15Kbytes

	binary_data_p=binblock_raw(data_phase)
	data_p=re.split('\r\n|,',binary_data_p)
	length=len(data_p[5:])
	data_p_array=np.array(data_p[5:])
	data_p_re=data_p_array.reshape(length/3,3)

	#-----------------------------------------------------------
	#___________________________________________________________


	#___________________________________________________________

	# Read Magnitude value and transfer to host controller
	#-----------------------------------------------------------

	MESSAGE = 'CALC1:FORM REAL;*OPC?\n'
	s.send(MESSAGE)

	MESSAGE = 'MMEM:STOR:FDAT "D:\\Auto\\EDGES_m.csv";*OPC?\n'
	s.send(MESSAGE)
	MESSAGE = 'MMEM:TRAN? "D:\\Auto\\EDGES_m.csv";*OPC?\n'
	s.send(MESSAGE)
	time.sleep(1)
	data_mag = s.recv(180000)

	binary_data_m=binblock_raw(data_mag)
	data_m=re.split('\r\n|,',binary_data_m)
	length=len(data_m[5:])
	data_m_array=np.array(data_m[5:])
	data_m_re=data_m_array.reshape(length/3,3)

	#-----------------------------------------------------------
	#___________________________________________________________

	#___________________________________________________________

	# Reshape Magnitude, phase and save as S11.csv in host controller
	#-----------------------------------------------------------

	S11=np.empty([np.size(data_m_re,0),3])
	S11[:,0]=data_m_re[:,0]
	S11[:,1]=data_m_re[:,1]
	S11[:,2]=data_p_re[:,1]
#        tt=len(S11)
	print("S11=",S11)
	np.savetxt('S11.csv',S11, delimiter=",")
	#print("S11 saved as S11.csv")
	#print("Number of points=",np.size(S11,0))
	#-----------------------------------------------------------
	#___________________________________________________________
	s.close()
def RS11():
	#-----------------------------------------------------------------------
	#             Function to read the data transfered from VNA
	#-----------------------------------------------------------------------
	def Rbinblock_raw(data_in):

	    #Find the start position of the IEEE header, which starts with a '#'.
	    startpos = data_in.find("#")
    	    #print("Start Position reported as " + str(startpos))

	    #Check for problem with start position.
	    if startpos < 0:
	        raise IOError("No start of block found")

	    #Find the number that follows '#' symbol.  This is the number of digits in the block length.
	    Size_of_Length = int(data_in[startpos+1])
	    #print("Size of Length reported as " + str(Size_of_Length))

	    ##Now that we know how many digits are in the size value, get the size of the data file.
	    Image_Size = int(data_in[startpos+2:startpos+2+Size_of_Length])
	    #print("Number of bytes in file are: " + str(Image_Size))

	    # Get the length from the header
	    offset = startpos+Size_of_Length

	    # Extract the data out into a list.
	    return data_in[offset:offset+Image_Size]
	#-----------------------------------------------------------------------
	#             Function to read the data transfered from VNA
	#-----------------------------------------------------------------------



	# Create a TCP/IP socket
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	server_address = ('10.206.161.72', 5025)                         # ip address of NA
	print "--------------------------------------------------------------------------"
        print >>sys.stderr, 'connecting to network analyser  %s port %s' % server_address
        print "--------------------------------------------------------------------------"
	
        s.connect(server_address)
	MESSAGE = '*IDN?\n'
	s.send(MESSAGE)
	time.sleep(0.05)
	data = s.recv(200)
	print "--------------------------------------------------------------------------"
	print "   Connected to ENA: ", data
	print "--------------------------------------------------------------------------"

	MESSAGE = 'FORM:DATA ASCii;*OPC?\n'             #Define data format for Data transfer reference SCPI Programer guide E5061A 
	s.send(MESSAGE)
 
        #MESSAGE='SENS:FREQ:START '+Start_freq+'e6;**OPC?\n'
	MESSAGE = 'SENS:FREQ:START 40e6;*OPC?\n'
	s.send(MESSAGE)

        #MESSAGE='SENS:FREQ:START '+Stop_freq+'e6;**OPC?\n'
	MESSAGE = 'SENS:FREQ:STOP 200e6;*OPC?\n'
	s.send(MESSAGE)

#-----------------------------------------------------
#       set the output power level there are different level of attenuation
#       check document Agilent E5070B/E5071B ENA programmers guide page no 705
        MESSAGE = 'SOUR:POW:ATT 30;*OPC?\n'
        s.send(MESSAGE)

        MESSAGE = 'SOUR:POW -35.00;*OPC?\n'
        s.send(MESSAGE)

        #MESSAGE = 'SOUR:POW?;*OPC?\n'
        #s.send(MESSAGE)
        time.sleep(0.5)
        #power = s.recv(200)
        #print"power=",power
#-----------------------------------------------------
#-----------------------------------------------------



	MESSAGE = 'SENS:SWE:POIN 641;*OPC?\n'
	s.send(MESSAGE)
	MESSAGE = 'SENS:BWID 100;*OPC?\n'
	s.send(MESSAGE)
        MESSAGE = 'SENS:AVER:STAT 1;*OPC?\n'
        s.send(MESSAGE)
        MESSAGE = 'SENS:AVER:CLE;*OPC?\n'
        s.send(MESSAGE)

	MESSAGE = 'SENS:AVER:COUN 30;*OPC?\n'
	s.send(MESSAGE)
	MESSAGE = 'INIT:CONT ON;*OPC?\n'
	s.send(MESSAGE)
#        MESSAGE = 'TRIG:WAIT WAIT;*OPC?\n'
#        s.send(MESSAGE)
        time.sleep(10)
        MESSAGE= 'DISP:WIND1:TRAC1:Y:AUTO;*OPC?\n'
        s.send(MESSAGE)

        print "__________________________________________________________________________ "
        print "__________________________________________________________________________ "

	print("VNA Settings\n")
        print("IF                 =100Hz\n")
        print("Strat freq         =40MHz\n")
        print("Strop freq         =200MHz\n")
        print("No. of freq points =641\n")
        print("RF power output    =-35dBm\n")
        print("No. of averaging   =30\n")
        print "__________________________________________________________________________ "
        print "__________________________________________________________________________ "
        
        print "__________________________________________________________________________ "
	print '                        STARTING MEASUREMENTS'
	#MESSAGE = 'INIT:IMM;*OPC?\n'
	print '__________________________________________________________________________'
	s.send(MESSAGE)
	time.sleep(230)
        MESSAGE = 'INIT:CONT OFF;*OPC?\n'
        s.send(MESSAGE)

	#___________________________________________________________

	# Read Phase value and transfer to host controller
	#-----------------------------------------------------------


	MESSAGE = 'CALC1:FORM IMAG;*OPC?\n' #Define data type and chanel for Data transfer reference SCPI Programer guide E5061A 
	s.send(MESSAGE)

	MESSAGE = 'MMEM:STOR:FDAT "D:\\Auto\\EDGES_p.csv";*OPC?\n'#save data internal memory reference SCPI Programer guide E5061A 
	s.send(MESSAGE)
	MESSAGE = 'MMEM:TRAN? "D:\\Auto\\EDGES_p.csv";*OPC?\n' #transfer data to host controller reference SCPI Programer guide E5061A 
	s.send(MESSAGE)
	time.sleep(1)
	data_phase = s.recv(180000) #buffer size for receiving data currently set as 15Kbytes

	binary_data_p=binblock_raw(data_phase)
	data_p=re.split('\r\n|,',binary_data_p)
	length=len(data_p[5:])
	data_p_array=np.array(data_p[5:])
	data_p_re=data_p_array.reshape(length/3,3)

	#-----------------------------------------------------------
	#___________________________________________________________


	#___________________________________________________________

	# Read Magnitude value and transfer to host controller
	#-----------------------------------------------------------

	MESSAGE = 'CALC1:FORM REAL;*OPC?\n'
	s.send(MESSAGE)

	MESSAGE = 'MMEM:STOR:FDAT "D:\\Auto\\EDGES_m.csv";*OPC?\n'
	s.send(MESSAGE)
	MESSAGE = 'MMEM:TRAN? "D:\\Auto\\EDGES_m.csv";*OPC?\n'
	s.send(MESSAGE)
	time.sleep(1)
	data_mag = s.recv(180000)

	binary_data_m=Rbinblock_raw(data_mag)
	data_m=re.split('\r\n|,',binary_data_m)
	length=len(data_m[5:])
	data_m_array=np.array(data_m[5:])
	data_m_re=data_m_array.reshape(length/3,3)

	#-----------------------------------------------------------
	#___________________________________________________________

	#___________________________________________________________

	# Reshape Magnitude, phase and save as S11.csv in host controller
	#-----------------------------------------------------------

	S11=np.empty([np.size(data_m_re,0),3])
	S11[:,0]=data_m_re[:,0]
	S11[:,1]=data_m_re[:,1]
	S11[:,2]=data_p_re[:,1]
#        tt=len(S11)
	print("S11=",S11)
	np.savetxt('S11.csv',S11, delimiter=",")
	#print("S11 saved as S11.csv")
	#print("Number of points=",np.size(S11,0))
	#-----------------------------------------------------------
	#___________________________________________________________


	s.close()

def vna_calib():
        #create a TCP/IP socket
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	server_address = ('10.206.161.72', 5025)                         # ip address of NA
	print "--------------------------------------------------------------------------"
        print >>sys.stderr, 'connecting to network analyser  %s port %s' % server_address
        print "--------------------------------------------------------------------------"
	
        s.connect(server_address)
	MESSAGE = '*IDN?\n'
	s.send(MESSAGE)
	time.sleep(0.05)
	data = s.recv(200)
	print "--------------------------------------------------------------------------"
	print "   Connected to ENA: ", data
	print "--------------------------------------------------------------------------"

	MESSAGE = 'FORM:DATA ASCii;*OPC?\n'             #Define data format for Data transfer reference SCPI Programer guide E5061A 
	s.send(MESSAGE)
 
	MESSAGE = 'SENS:FREQ:START 40e6;*OPC?\n'
	s.send(MESSAGE)

	MESSAGE = 'SENS:FREQ:STOP 200e6;*OPC?\n'
	s.send(MESSAGE)
#------------------------------------------------------
#-----------------------------------------------------
#       set the output power level there are different level of attenuation
#       check document Agilent E5070B/E5071B ENA programmers guide page no 705
        MESSAGE = 'SOUR:POW:ATT 0;*OPC?\n'
        s.send(MESSAGE)
 
        MESSAGE = 'SOUR:POW 0.00;*OPC?\n'
        s.send(MESSAGE)
        
#-----------------------------------------------------
#-----------------------------------------------------

        MESSAGE = 'SENS1:CORR:COLL:CKIT 1;*OPC?\n'
        s.send(MESSAGE)

        MESSAGE = 'SENS:SWE:POIN 641;*OPC?\n'
        s.send(MESSAGE)
        MESSAGE = 'SENS:BWID 100;*OPC?\n'
        s.send(MESSAGE)
        MESSAGE = 'SENS:AVER:STAT 1;*OPC?\n'
        s.send(MESSAGE)
        MESSAGE = 'SENS:AVER:CLE;*OPC?\n'
        s.send(MESSAGE)
   
        MESSAGE = 'SENS:AVER:COUN 10;*OPC?\n'
        s.send(MESSAGE)
        print "__________________________________________________________________________ "
        print "__________________________________________________________________________ "

        print("Settings for VNA calibration\n")
        print("IF                 =100Hz\n")
        print("Strat freq         =40MHz\n")
        print("Strop freq         =200MHz\n")
        print("No. of freq points =641\n")
        print("RF power output    =0dBm\n")
        print("No. of averaging   =10\n")
        print("Calibration kit    =85033E Agilent ")
        print "__________________________________________________________________________ "
        print "__________________________________________________________________________ "
        
        raw_input("Press enter to continue......") 
        print("Remaning procedure is done in the front pannel of VNA ")
#        raw_input("Press enter to continue......")
        print("Step1: Selete Calibrate from the main menu")
        #raw_input("Press enter to continue......")
        print("Step2: Again select Calibrate")
        #raw_input("Press enter to continue......")
        print("Step3: Select 1-Port Cal")
        #raw_input("Press enter to continue......")
        print("Step4: Connect open to VNA port-1")
        #raw_input("Press enter to continue......")
        print("Step5: Select open and wait for 10 average")
        #raw_input("Press enter to continue......")
        print("Step6: Connect Short to VNA port-1")
        #raw_input("Press enter to continue......")
        print("Step7: Select Short and wait for 10 average")
        #raw_input("Press enter to continue......")
        print("Step8: Connect Load to VNA port-1")
        #raw_input("Press enter to continue......")
        print("Step9: Select Load and wait for 10 average")
        #raw_input("Press enter to continue......")
        print("Step10: Select Done")
        raw_input("Press enter to continue......")
        print("VNA Calibration is completed for all loads except ReceiverReading")
	s.close()


def RR_VNA_calib():
        #create a TCP/IP socket
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	server_address = ('10.206.161.72', 5025)                         # ip address of NA
	print "--------------------------------------------------------------------------"
        print >>sys.stderr, 'connecting to network analyser  %s port %s' % server_address
        print "--------------------------------------------------------------------------"
	
        s.connect(server_address)
	MESSAGE = '*IDN?\n'
	s.send(MESSAGE)
	time.sleep(0.05)
	data = s.recv(200)
	print "--------------------------------------------------------------------------"
	print "   Connected to ENA: ", data
	print "--------------------------------------------------------------------------"

	MESSAGE = 'FORM:DATA ASCii;*OPC?\n'             #Define data format for Data transfer reference SCPI Programer guide E5061A 
	s.send(MESSAGE)
 
	MESSAGE = 'SENS:FREQ:START 40e6;*OPC?\n'
	s.send(MESSAGE)

	MESSAGE = 'SENS:FREQ:STOP 200e6;*OPC?\n'
	s.send(MESSAGE)
#------------------------------------------------------
#-----------------------------------------------------
#       set the output power level there are different level of attenuation
#       check document Agilent E5070B/E5071B ENA programmers guide page no 705
        MESSAGE = 'SOUR:POW:ATT 30;*OPC?\n'
        s.send(MESSAGE)
 
        MESSAGE = 'SOUR:POW -35.00;*OPC?\n'
        s.send(MESSAGE)
        
#-----------------------------------------------------
#-----------------------------------------------------

        MESSAGE = 'SENS1:CORR:COLL:CKIT 1;*OPC?\n'
        s.send(MESSAGE)

        MESSAGE = 'SENS:SWE:POIN 641;*OPC?\n'
        s.send(MESSAGE)
        MESSAGE = 'SENS:BWID 100;*OPC?\n'
        s.send(MESSAGE)
        MESSAGE = 'SENS:AVER:STAT 1;*OPC?\n'
        s.send(MESSAGE)
        MESSAGE = 'SENS:AVER:CLE;*OPC?\n'
        s.send(MESSAGE)
   
        MESSAGE = 'SENS:AVER:COUN 30;*OPC?\n'
        s.send(MESSAGE)
        print "__________________________________________________________________________ "
        print "__________________________________________________________________________ "

        print("Settings for VNA calibration\n")
        print("IF                 =100Hz\n")
        print("Strat freq         =40MHz\n")
        print("Strop freq         =200MHz\n")
        print("No. of freq points =641\n")
        print("RF power output    =-35dBm\n")
        print("No. of averaging   =30\n")
        print("Calibration kit    =85033E Agilent ")
        print "__________________________________________________________________________ "
        print "__________________________________________________________________________ "
        
        raw_input("Press enter to continue......") 
        print("Remaning procedure is done in the front pannel of VNA ")
        #raw_input("Press enter to continue......")
        print("Step1: Connect Male to Male SMA adapter to Port-1 and selete Calibrate from the main menu")
        #raw_input("Press enter to continue......")
        print("Step2: Again select Calibrate")
        #raw_input("Press enter to continue......")
        print("Step3: Select 1-Port Cal, Use female calibration kit")
        #raw_input("Press enter to continue......")
        print("Step4: Connect open to VNA port-1")
        #raw_input("Press enter to continue......")
        print("Step5: Select open and wait for 10 average")
        #raw_input("Press enter to continue......")
        print("Step6: Connect Short to VNA port-1")
        #raw_input("Press enter to continue......")
        print("Step7: Select Short and wait for 10 average")
        #raw_input("Press enter to continue......")
        print("Step8: Connect Load to VNA port-1")
        #raw_input("Press enter to continue......")
        print("Step9: Select Load and wait for 10 average")
        #raw_input("Press enter to continue......")
        print("Step10: Select Done")
        raw_input("Press enter to continue......")
        print("VNA Calibration is completed for all loads except ReceiverReading")
	s.close()
def handler(signum, frame): # switch off the 48V sp4t power supply controller while detecting ctrl+C

    print'\n'
    print '    Ctrl+C detected exiting calibration'
    Global_var.p.terminate()
    Global_var.e.terminate()
    Global_var.d.getFeedback(u3.BitStateWrite(4, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(5, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(6, 1))
    Global_var.d.getFeedback(u3.BitStateWrite(7, 1))
    time.sleep(1)
    print '    Ctrl+C detected exiting calibration exited'
    exit(0)


  
def main():
    signal.signal(signal.SIGINT, handler)
    cli_automation()
if __name__=='__main__':
    main()
    #main()
